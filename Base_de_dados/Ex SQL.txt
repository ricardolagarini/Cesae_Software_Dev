INSERT INTO Cliente (nome, cidade, data_inscricao, pontos) values 
('Ana', 'Maia', '2018-03-11', 123), 
('Bruno', 'Porto', '2006-06-22', 5347), 
('Miguel', 'Porto', '2010-07-26', 1789), 
('Maria', 'Valbom', '2006-05-21', 3234), 
('Joana', 'Maia', '2011-08-7', 678), 
('Anabela', 'Ermesinde', '2012-03-21', 864), 
('Manuel', 'Gaia', '2019-06-22', 1123), 
('Bruna', 'Porto', '2020-07-15', 1589), 
('Joana', 'Gaia', '2021-04-14', 324), 
('Raquel', 'Maia', '2019-01-21', 1899), 
('Vitor', 'Gaia', '2020-09-29', 127); 

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Inserir +3 novos clientes à tabela de clientes;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

INSERT INTO Cliente (nome, cidade, data_inscricao, pontos)
VALUES 
  ('Rui', 'Matosinhos', '2022-01-11', 500),
  ('Inês', 'Porto', '2022-01-11', 750),
  ('Carlos', 'Maia', '2022-01-11', 900);
  
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Atualize o valor de pontos do cliente nr 3 para 2789; 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

UPDATE Cliente
SET pontos = 2789
WHERE id_cliente = 3;

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Atualize o nome de ‘Vitor’ (cliente nr 11) para ‘Vitorino’ e os pontos para 
327; 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

UPDATE Cliente
SET nome = 'Vitorino', pontos = 327
WHERE id_cliente = 11;               ----->corresponde a linha do Cliente


////////////////////////////////////<>//////////////////////////////////////////


Produto (descricao, preco, stock) values 
('Martelo', 5.99, 23), 
('Parafuso', 0.99, 241), 
('Prego', 0.2, 147), 
('Rosca', 0.3, 0), 
('Berbequim', 35.99, 15), 
('Torneira', 20.99, 11), 
('Lampada', 1.5, 0), 
('Broca', 2.6, 60), 
('Extensão', 10.5, 0), 
('Tripla', 5.5, 16), 
('Pincel', 3.99, 34), 
('Calha', 2.99, 0);

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Inserir +5 novos produtos à tabela de produtos; 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

INSERT INTO Produto (descricao, preco, stock)
VALUES 
  ('Marreta', '19', 20),
  ('Serrote', '25', 10),
  ('Bazooka', '1000', 1);

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Atualize o stock do ‘Berbequim’ para 13;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

UPDATE Produto
SET stock = 13
WHERE id_produto = 5;

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Elimine os produtos cuja descrição seja ‘Calha’ da tabela produto; 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

DELETE FROM Produto
WHERE id_produto = 12

////////////////////////////////////<>//////////////////////////////////////////


Venda (id_cliente, data_venda, desconto) values 
(1, '2021-03-29', 0.05), 
(1, '2021-03-31', 0.20), 
(2, '2021-05-03', 0), 
(4, '2021-05-21', 0), 
(1, '2021-06-15', 0.1), 
(5, '2021-06-05', 0), 
(4, '2021-08-11', 0.05), 
(3, '2021-09-03', 0.25), 
(5, '2021-10-23', 0.5), 
(7, '2021-11-04', 0), 
(6, '2021-11-05', 0.5); 

LinhaVenda (id_venda, id_produto, quantidade) values 
(1, 1, 2), 
(1, 3, 10), 
(2, 2, 20), 
(3, 5, 2), 
(4, 8, 5), 
(5, 10, 2), 
(5, 11, 10), 
(6, 6, 20), 
(7, 3, 120), 
(7, 1, 5), 
(7, 7, 2), 
(8, 3, 10), 
(9, 2, 80), 
(9, 3, 50), 
(9, 1, 3), 
(9, 8, 2), 
(10, 9, 10), 
(10, 2, 50), 
(10, 3, 70), 
(11, 5, 1); 



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Ver toda a informação de todos os clientes;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SELECT * FROM Cliente;

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Ver todas as cidades dos clientes (sem duplicados);
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SELECT DISTINCT cidade FROM Cliente;

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Ver a descrição, preço, preço com iva (23%) de todos os produtos e chame ao 
último atributo ‘Preço + IVA’; 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SELECT descricao, preco, preco * 1.23 AS 'Preço + IVA' FROM Produto;

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Ver todos os clientes que se inscreveram entre ‘2000-01-01’ e ‘2009-01-01’ e 
com mais de 1000 pontos; 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SELECT *
FROM Cliente
WHERE data_inscricao BETWEEN '2000-01-01' AND '2009-01-01'
AND pontos > 1000;

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Ver produtos com stock igual a 0, 15 e 60;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SELECT *
FROM Produto
WHERE stock IN (0, 15, 60);

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Ver todos os clientes cujo nome contenha ‘ana’, ordenado por ordem descendente 
pelo id_cliente; 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SELECT *
FROM Cliente
WHERE nome LIKE '%ana%'
ORDER BY id_cliente DESC;

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Ver todos os clientes cujo nome seja composto no total por 5 caracteres sendo o 
último um ‘a’; 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SELECT *
FROM Cliente
WHERE nome LIKE '%____a%'

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Ver todos os produtos cuja descrição comece por ‘P’ ou ‘T’ ou termine em ‘CA’;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SELECT *
FROM Produto
WHERE descricao LIKE 'P%' OR descricao LIKE 'T%' OR descricao LIKE '%CA';

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Ver apenas o 6º,7º,8º cliente com mais pontos;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SELECT *
ORDER BY pontos DESC   // ordernar por pontos em ordem descrescente
LIMIT 5, 3;            // LIMIT 5, 3 seleciona 3 registros começando a partir do 6º registro (o índice 5, porque a contagem começa do zero).

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Ver as cidades que tenham mais de 1 cliente;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SELECT cidade, COUNT(*) as total_clientes
FROM Cliente
GROUP BY cidade
HAVING COUNT(*) > 1;

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Ver quais as vendas que não foi aplicado nenhum desconto; 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Ver o top 3 produtos mais caros;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Ver todas as vendas que tiveram um desconto superior a 10%; 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Ver todos os id_vendas, Nomes de cliente e Localidade de cliente; 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Ver todos as descrições e preço unitário de produtos da venda nr 9; 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Ver todas as descrições, preço unitário e quantidade da venda nr 10; 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Ver exatamente os mesmos atributos que o ponto anterior, acrescentando uma 
coluna chamada ‘Total por Produto’ que multiplica o preço unitário e quantidade;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Ver todos os produtos vendidos entre '2021-05-01' e '2021-08-01'; 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Ver o total faturado em cada venda, sem desconto aplicado (ter atenção ao group 
by); 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Ver quais os produtos vendidos a clientes de ‘Gaia’;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



